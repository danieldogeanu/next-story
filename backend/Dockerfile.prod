FROM node:18-alpine AS base

# Creating multi-stage build for production.
FROM base AS build

RUN apk update && apk add --no-cache \
  build-base \
  gcc \
  autoconf \
  automake \
  zlib-dev \
  libpng-dev \
  vips-dev \
  git \
  > /dev/null 2>&1

ARG STRAPI_PORT
ARG STRAPI_HOST

ENV STRAPI_PORT=${STRAPI_PORT}
ENV STRAPI_HOST=${STRAPI_HOST}
ENV NODE_ENV production

# Disable Strapi telemetry and promotional features.
ENV STRAPI_TELEMETRY_DISABLED true
ENV STRAPI_DISABLE_UPDATE_NOTIFICATION true
ENV FLAG_NPS false
ENV FLAG_PROMOTE_EE false

WORKDIR /opt/
COPY package.json package-lock.json ./
RUN npm install -g node-gyp
RUN npm config set fetch-retry-maxtimeout 600000 -g && npm ci --only=production
ENV PATH /opt/node_modules/.bin:$PATH

WORKDIR /opt/app
COPY . .
RUN npm run build

# Creating final production image.
FROM base AS production

RUN apk add --no-cache vips-dev

ARG STRAPI_PORT
ARG STRAPI_HOST

ENV STRAPI_PORT=${STRAPI_PORT}
ENV STRAPI_HOST=${STRAPI_HOST}
ENV NODE_ENV production

# Disable Strapi telemetry and promotional features.
ENV STRAPI_TELEMETRY_DISABLED true
ENV FLAG_NPS false
ENV FLAG_PROMOTE_EE false

WORKDIR /opt/
COPY --from=build /opt/node_modules ./node_modules
ENV PATH /opt/node_modules/.bin:$PATH

WORKDIR /opt/app
COPY --from=build /opt/app ./

RUN chown -R node:node /opt/app
USER node

EXPOSE ${STRAPI_PORT}
ENV PORT=${STRAPI_PORT}
ENV HOST=${STRAPI_HOST}

CMD ["npm", "run", "start"]
