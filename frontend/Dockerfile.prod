FROM node:18-alpine AS base

# Rebuild the source code only when needed.
FROM base AS build

ENV NODE_ENV production
ENV BUILD_TIME 1
ENV NEXT_TELEMETRY_DISABLED 1

# Environment variables must be present at build time.
ARG NEXT_PUBLIC_BACKEND_URL
ARG NEXT_PUBLIC_LANG
ARG NEXT_STRAPI_FE_APIKEY
ARG NEXT_STRAPI_BE_APIKEY
ENV NEXT_PUBLIC_BACKEND_URL=${NEXT_PUBLIC_BACKEND_URL}
ENV NEXT_PUBLIC_LANG=${NEXT_PUBLIC_LANG}
ENV NEXT_STRAPI_FE_APIKEY=${NEXT_STRAPI_FE_APIKEY}
ENV NEXT_STRAPI_BE_APIKEY=${NEXT_STRAPI_BE_APIKEY}

WORKDIR /app
COPY package.json package-lock.json ./
RUN npm ci --include=dev
ENV PATH /node_modules/.bin:$PATH
COPY . .
RUN npm run build

# Production image, copy all the files and run next.
FROM base AS production

ENV NODE_ENV production
ENV BUILD_TIME 0
ENV NEXT_TELEMETRY_DISABLED 1

# Environment variables must be redefined at run time.
ARG NEXT_PUBLIC_BACKEND_URL
ARG NEXT_PUBLIC_LANG
ARG NEXT_STRAPI_FE_APIKEY
ARG NEXT_STRAPI_BE_APIKEY
ENV NEXT_PUBLIC_BACKEND_URL=${NEXT_PUBLIC_BACKEND_URL}
ENV NEXT_PUBLIC_LANG=${NEXT_PUBLIC_LANG}
ENV NEXT_STRAPI_FE_APIKEY=${NEXT_STRAPI_FE_APIKEY}
ENV NEXT_STRAPI_BE_APIKEY=${NEXT_STRAPI_BE_APIKEY}

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs
USER nextjs

WORKDIR /app
COPY --from=build --chown=nextjs:nodejs /app/public ./public
COPY --from=build --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=build --chown=nextjs:nodejs /app/.next/static ./.next/static
COPY --from=build --chown=nextjs:nodejs /app/node_modules ./node_modules
ENV PATH /node_modules/.bin:$PATH

EXPOSE 3000
ENV PORT 3000

CMD ["node", "server.js"]
